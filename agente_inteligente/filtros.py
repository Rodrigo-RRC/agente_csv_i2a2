# filtros.py

#üßæ Fun√ß√£o 1: Filtrar por estado (UF)

# Importamos o pandas pois todas as opera√ß√µes de filtragem
# que faremos s√£o com DataFrames, que √© a estrutura do pandas.

import pandas as pd


# Esta fun√ß√£o recebe um DataFrame (df) e uma UF (ex: "PB").
# Ela retorna apenas as linhas do DataFrame em que a coluna "UF" √© igual √† UF informada.


def filtrar_por_estado(df: pd.DataFrame, uf: str) -> pd.DataFrame:

"""
    Filtra o DataFrame por unidade federativa (estado).

    Par√¢metros:
        df: DataFrame de entrada (ex: df_cabecalho)
        uf: Sigla do estado (ex: "PB", "SP", "RJ")

    Retorna:
        DataFrame contendo apenas as linhas da UF informada.
    """

# Padroniza a UF para mai√∫sculas, caso o usu√°rio informe em min√∫sculas
    uf = uf.upper()

# Verifica se a coluna "UF" existe no DataFrame
    if "UF" not in df.columns:
        print("‚ùå Coluna 'UF' n√£o encontrada no DataFrame.")
        return df

# Filtra o DataFrame onde a coluna "UF" √© igual √† uf fornecida
    df_filtrado = df[df["UF"] == uf]


# Mostra o n√∫mero de registros encontrados
    print(f"üîé {len(df_filtrado)} registros encontrados para o estado: {uf}")
    return df_filtrado


#üèôÔ∏è Fun√ß√£o 2: Filtrar por munic√≠pio

# Esta fun√ß√£o √© parecida com a anterior, mas agora o filtro √© pela coluna "MUNICIPIO".

def filtrar_por_municipio(df: pd.DataFrame, municipio: str) -> pd.DataFrame:
    """
    Filtra o DataFrame por nome de munic√≠pio (cidade).

    Par√¢metros:
        df: DataFrame de entrada (ex: df_cabecalho)
        municipio: Nome da cidade a ser buscada (ex: "Jo√£o Pessoa")

    Retorna:
        DataFrame contendo apenas as linhas da cidade informada.
    """
    # Padroniza o nome para caixa alta, se necess√°rio
    municipio = municipio.strip().upper()

    # Verifica se a coluna "MUNICIPIO" existe no DataFrame
    if "MUNICIPIO" not in df.columns:
        print("‚ùå Coluna 'MUNICIPIO' n√£o encontrada no DataFrame.")
        return df

    # Filtra pelas cidades cujo nome, em mai√∫sculas, bate com o informado
    df_filtrado = df[df["MUNICIPIO"].str.upper() == municipio]

    # Mostra o n√∫mero de registros encontrados
    print(f"üèôÔ∏è {len(df_filtrado)} registros encontrados para o munic√≠pio: {municipio.title()}")
    return df_filtrado

# ‚úÖ Finaliza√ß√£o do m√≥dulo
# Fim do m√≥dulo filtros.py

# Outras fun√ß√µes poder√£o ser adicionadas aqui no futuro:
# - Filtrar por data
# - Filtrar por CNPJ
# - Agrega√ß√µes por produto ou NCM
